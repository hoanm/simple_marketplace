/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Addr = string;
export interface InstantiateMsg {
  owner: Addr;
}
export type ExecuteMsg = {
  list_nft: {
    contract_address: string;
    listing_config: ListingConfig;
    token_id: string;
  };
} | {
  buy: {
    contract_address: string;
    token_id: string;
  };
} | {
  cancel: {
    contract_address: string;
    token_id: string;
  };
} | {
  create_collection: {
    name: string;
    symbol: string;
  };
} | {
  mint_nft: {
    contract_address: string;
    token_id: string;
    token_uri: string;
  };
};
export type Expiration = {
  at_height: number;
} | {
  at_time: Timestamp;
} | {
  never: {};
};
export type Timestamp = Uint64;
export type Uint64 = string;
export type Uint128 = string;
export interface ListingConfig {
  end_time?: Expiration | null;
  price: Coin;
  start_time?: Expiration | null;
}
export interface Coin {
  amount: Uint128;
  denom: string;
  [k: string]: unknown;
}
export type QueryMsg = {
  config: {};
} | {
  listings_by_contract_address: {
    contract_address: string;
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  listing: {
    contract_address: string;
    token_id: string;
  };
};
export interface Config {
  owner: Addr;
}
export interface Listing {
  buyer?: Addr | null;
  contract_address: Addr;
  listing_config: ListingConfig;
  seller: Addr;
  token_id: string;
}
export interface ListingsResponse {
  listings: Listing[];
}